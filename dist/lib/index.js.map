{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","require","buffered","fn","ms","id","bn","args","Promise","resolve","clearTimeout","setTimeout","apply","cancel","decorator","arg","key","descriptor","_decorator","target","el","hasOwnProperty","default"],"mappings":"AAAA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;AACAC,QAAQ,gBAAR;AACA;;;;;;;;;;;;;AAaA,SAASC,QAAT,CAAkBC,EAAlB,EAAgC;AAAA,QAAVC,EAAU,uEAAL,GAAK;;AAC5B,QAAIC,WAAJ;AACA,QAAMC,KAAK,SAALA,EAAK,GAAkB;AAC3B;AAAA;;AAAA,0CADsBC,IACtB;AADsBA,gBACtB;AAAA;;AACE,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BC,yBAAaL,EAAb;AACAA,iBAAKM,WAAW;AAAA,uBAAMF,QAAQN,GAAGS,KAAH,CAAS,KAAT,EAAeL,IAAf,CAAR,CAAN;AAAA,aAAX,EAAgDH,EAAhD,CAAL;AACH,SAHM,CAAP;AAIH,KAND;AAOAE,OAAGO,MAAH,GAAY,YAAM;AACdH,qBAAaL,EAAb;AACH,KAFD;AAGA,WAAOC,EAAP;AACH;AACDP,QAAQG,QAAR,GAAmBA,QAAnB;AACA,SAASY,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;AACrC,QAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AACzB,eAAOG,WAAWH,GAAX,CAAP;AACH,KAFD,MAGK;AACDG,mBAAW,GAAX,EAAgBH,GAAhB,EAAqBC,GAArB,EAA0BC,UAA1B;AACH;AACJ;AACDlB,QAAQe,SAAR,GAAoBA,SAApB;AACA,SAASI,UAAT,CAAoBd,EAApB,EAAwB;AACpB,WAAO,UAACe,MAAD,EAASH,GAAT,EAAcC,UAAd,EAA6B;AAChC,YAAMd,KAAKc,aACLA,WAAWjB,KADN,GACcmB,OAAOH,GAAP,CADzB;AAEA,YAAMV,KAAKJ,SAASC,EAAT,EAAaC,EAAb,CAAX;AACA,aAAK,IAAMgB,EAAX,IAAiBjB,EAAjB,EAAqB;AACjB,gBAAIA,GAAGkB,cAAH,CAAkBD,EAAlB,CAAJ,EAA2B;AACvBd,mBAAGc,EAAH,IAASjB,GAAGiB,EAAH,CAAT;AACH;AACJ;AACD,YAAIH,UAAJ,EAAgB;AACZA,uBAAWjB,KAAX,GAAmBM,EAAnB;AACH,SAFD,MAGK;AACDa,mBAAOH,GAAP,IAAcV,EAAd;AACH;AACJ,KAfD;AAgBH;AACDP,QAAQuB,OAAR,GAAkBpB,QAAlB","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:ban-types */\nrequire(\"babel-polyfill\");\n/**\n * Returns a buffered and cancelable version for the provided function.\n *\n * The buffered function does *not* get invoked before the specified delay in\n * milliseconds passes, no matter have many times it gets invoked in between.\n * Also upon the invocation of the *buffering* function a promise is returned.\n * Further, it is also possible to *cancel* a particular invocation before the\n * delay passes.\n *\n * @param fn an arbitrary function\n * @param ms delay in milliseconds\n * @returns a buffered function (returning a promise)\n */\nfunction buffered(fn, ms = 200) {\n    let id;\n    const bn = function (...args // tslint:disable-line:trailing-comma\n    ) {\n        return new Promise((resolve) => {\n            clearTimeout(id);\n            id = setTimeout(() => resolve(fn.apply(this, args)), ms);\n        });\n    };\n    bn.cancel = () => {\n        clearTimeout(id);\n    };\n    return bn;\n}\nexports.buffered = buffered;\nfunction decorator(arg, key, descriptor) {\n    if (typeof arg === \"number\") {\n        return _decorator(arg);\n    }\n    else {\n        _decorator(200)(arg, key, descriptor);\n    }\n}\nexports.decorator = decorator;\nfunction _decorator(ms) {\n    return (target, key, descriptor) => {\n        const fn = descriptor\n            ? descriptor.value : target[key];\n        const bn = buffered(fn, ms);\n        for (const el in fn) {\n            if (fn.hasOwnProperty(el)) {\n                bn[el] = fn[el];\n            }\n        }\n        if (descriptor) {\n            descriptor.value = bn;\n        }\n        else {\n            target[key] = bn;\n        }\n    };\n}\nexports.default = buffered;\n"]}
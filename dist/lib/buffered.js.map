{"version":3,"sources":["buffered.js"],"names":["Object","defineProperty","exports","value","buffered","fn","ms","id","bn","args","Promise","resolve","clearTimeout","setTimeout","apply","cancel"],"mappings":"AAAA;AACA;;AACA;;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;;;;;;AAaA,SAASC,QAAT,CAAkBC,EAAlB,EAAgC;AAAA,MAAVC,EAAU,uEAAL,GAAK;AAC5B,MAAIC,EAAJ;;AACA,MAAMC,EAAE,GAAG,SAALA,EAAK,GAAmB;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAC1B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BC,MAAAA,YAAY,CAACL,EAAD,CAAZ;AACAA,MAAAA,EAAE,GAAGM,UAAU,CAAC;AAAA,eAAMF,OAAO,CAACN,EAAE,CAACS,KAAH,CAAS,KAAT,EAAeL,IAAf,CAAD,CAAb;AAAA,OAAD,EAAsCH,EAAtC,CAAf;AACH,KAHM,CAAP;AAIH,GALD;;AAMAE,EAAAA,EAAE,CAACO,MAAH,GAAY,YAAM;AACdH,IAAAA,YAAY,CAACL,EAAD,CAAZ;AACH,GAFD;;AAGA,SAAOC,EAAP;AACH;;AACDN,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,WAAP,GAAkBE,QAAlB","sourcesContent":["\"use strict\";\n/* tslint:disable:ban-types */\n/* tslint:disable:callable-types */\n/* tslint:disable:trailing-comma */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a buffered and cancelable version for the provided function.\n *\n * The buffered function does *not* get invoked,   before the specified\n * delay in milliseconds passes,  no matter how much it gets invoked in\n * between. Also upon the invocation of the *actual* function a promise\n * is returned.  Further,  it is also possible to *cancel* a particular\n * invocation before the delay passes.\n *\n * @param fn an arbitrary function\n * @param ms delay in milliseconds\n * @returns a buffered function\n */\nfunction buffered(fn, ms = 200) {\n    let id;\n    const bn = function (...args) {\n        return new Promise((resolve) => {\n            clearTimeout(id);\n            id = setTimeout(() => resolve(fn.apply(this, args)), ms);\n        });\n    };\n    bn.cancel = () => {\n        clearTimeout(id);\n    };\n    return bn;\n}\nexports.buffered = buffered;\nexports.default = buffered;\n"],"file":"buffered.js"}